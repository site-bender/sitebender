{
	"version": "1.0.0",
	"lastUpdated": "2025-01-11",
	"library": "envoy",
	"purpose": "Generate comprehensive documentation from Arborist output. Creates graphs, diagrams, and human-readable docs.",
	"api": {
		"exports": [
			{
				"name": "generateDocumentation",
				"signature": "(input: ContractOutput<ParsedProject>) => Documentation",
				"description": "Generate documentation for an entire project from Arborist output"
			},
			{
				"name": "generateFileDocumentation",
				"signature": "(input: ContractOutput<ParsedFile>) => FileDocumentation",
				"description": "Generate documentation for a single file from Arborist output"
			},
			{
				"name": "generateGraph",
				"signature": "(input: ContractOutput<ParsedProject>) => CodebaseGraph",
				"description": "Generate a dependency graph of the entire codebase"
			}
		],
		"types": [
			{
				"name": "Documentation",
				"description": "Complete documentation for a project",
				"fields": [
					"projectName: string",
					"files: Map<string, FileDocumentation>",
					"graph: CodebaseGraph",
					"index: SearchIndex",
					"timestamp: number"
				]
			},
			{
				"name": "FileDocumentation",
				"description": "Documentation for a single file",
				"fields": [
					"filePath: string",
					"description: string",
					"functions: FunctionDoc[]",
					"types: TypeDoc[]",
					"constants: ConstantDoc[]",
					"examples: Example[]",
					"techDebt: TechDebtItem[]",
					"links: Link[]"
				]
			},
			{
				"name": "EnvoyComment",
				"description": "Parsed Envoy comment with interpreted syntax",
				"fields": [
					"type: 'description' | 'techDebt' | 'help' | 'critical' | 'link'",
					"content: string",
					"lineNumber: number",
					"associatedNode: string"
				],
				"note": "Envoy interprets comment syntax (//++, //--, etc.) that Arborist provides as raw text"
			},
			{
				"name": "CodebaseGraph",
				"description": "Dependency and relationship graph of the codebase",
				"fields": [
					"nodes: GraphNode[]",
					"edges: GraphEdge[]",
					"clusters: GraphCluster[]",
					"metadata: GraphMetadata"
				]
			}
		]
	},
	"responsibilities": {
		"owns": [
			"Envoy comment syntax interpretation",
			"Documentation generation",
			"Graph visualization",
			"Folder hierarchy analysis",
			"Configuration file reading (deno.jsonc, .editorconfig)",
			"Markdown/HTML output formatting",
			"Search index generation"
		],
		"consumes": [
			"Arborist's ContractOutput only",
			"Raw comment text from Arborist",
			"AST data from Arborist",
			"Type information from Arborist"
		],
		"forbidden": [
			"Parsing TypeScript/JSX directly",
			"Using TypeScript compiler",
			"Using ts-morph",
			"Reading source files for parsing",
			"Modifying Arborist's output",
			"Generating tests",
			"Making network requests"
		]
	},
	"implementation": {
		"allowed": [
			"Import from @sitebender/arborist/exports/types",
			"Read configuration files",
			"Walk folder hierarchy",
			"Generate markdown/HTML",
			"Create graphs and diagrams"
		],
		"forbidden": [
			"Import TypeScript compiler",
			"Import ts-morph",
			"Import from @sitebender/arborist/internal",
			"Use regex to parse TypeScript",
			"Redefine Arborist's types",
			"Access .ts/.tsx files for parsing"
		]
	},
	"input": {
		"requirements": [
			"Must validate contract version",
			"Must check input.validate() before processing",
			"Must handle frozen/immutable data",
			"Must not attempt to modify input"
		],
		"validation": {
			"compile-time": [
				"TypeScript enforces ContractOutput type",
				"Cannot import from wrong paths"
			],
			"runtime": [
				"Contract version validation",
				"Input validation check",
				"Checksum verification"
			],
			"test-time": [
				"No forbidden imports",
				"No TypeScript parsing",
				"Contract compliance"
			]
		}
	},
	"dependencies": {
		"allowed": ["arborist"],
		"forbidden": [
			"auditor",
			"quarrier",
			"toolsmith",
			"architect",
			"artificer",
			"formulator",
			"agent"
		]
	},
	"commentSyntax": {
		"//++": "Description of function/component/type/constant",
		"//--": "Technical debt marker",
		"//??": "Help text, examples, gotchas",
		"//!!": "Critical problem or warning",
		"//>>>": "Link to external resource",
		"//": "Regular comment (not included in docs)"
	},
	"versioning": {
		"strategy": "semver",
		"breaking-changes": "Major version bump required",
		"deprecation": "One minor version warning before removal"
	}
}
