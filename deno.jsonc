{
	// Workspace configuration for the Sitebender monorepo
	"workspace": [
		"./applications/docs",
		"./applications/playground",
		"./applications/web3-lab",
		"./libraries/components",
		"./libraries/distributed",
		"./libraries/engine",
		"./libraries/maths",
		"./libraries/prover",
		"./libraries/scribe",
		"./libraries/toolkit",
		"./tools/scaffold",
		"./tools/cli",
		"./tools/web3-tools",
		"./plugins/vscode"
	],

	"tasks": {
		"analyze": "deno task analyze:files",
		"analyze:files": "deno run --allow-read scripts/analyzeFiles/index.ts",

		// === Formatting and Code Quality ===
		"fmt": "deno task fmt:repo",
		"fmt:all": "deno task fmt:all:repo",
		"fmt:repo": "deno task sort && deno fmt",
		"fmt:all:repo": "deno task sort:all && deno fmt",
		"fmt:check": "deno fmt --check plugins/ applications/docs/ applications/playground/ libraries/ scripts/",
		"lint": "deno lint plugins/ applications/docs/ applications/playground/ libraries/ scripts/",
		"lint:all": "deno lint plugins/ applications/docs/ applications/playground/ libraries/ scripts/",
		"fp:check": "deno run --allow-read --allow-run scripts/enforceFP/index.ts",
		"fp:agent": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'plugins/vscode/src/**/*.ts' 'plugins/vscode/src/**/*.tsx'",
		"fp:docs": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'applications/docs/src/**/*.ts' 'applications/docs/src/**/*.tsx'",
		"fp:playground": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'applications/playground/src/**/*.ts' 'applications/playground/src/**/*.tsx'",
		"fp:engine": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/engine/src/**/*.ts' 'libraries/engine/src/**/*.tsx'",
		"fp:components": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/components/src/**/*.ts' 'libraries/components/src/**/*.tsx'",
		"fp:toolkit": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/toolkit/src/**/*.ts' 'libraries/toolkit/src/**/*.tsx'",
		"fp:pedantic": "deno run --allow-read --allow-run scripts/enforceFP/index.ts --pedantic 'libraries/*/src/**/*.ts' 'libraries/*/src/**/*.tsx'",

		// === Testing ===
		"test:engine": "deno test --unstable-temporal --no-check 'libraries/engine/tests/**/*.test.ts'",
		"test:engine:strict": "deno test --unstable-temporal 'libraries/engine/tests/**/*.test.ts'",
		"test:components": "deno test --unstable-temporal --no-check 'libraries/components/tests/**/*.test.ts'",
		"test:components:strict": "deno test --unstable-temporal 'libraries/components/tests/**/*.test.ts'",
		"test:maths": "deno test --unstable-temporal --no-check 'libraries/maths/tests/**/*.test.ts'",
		"test:maths:strict": "deno test --unstable-temporal 'libraries/maths/tests/**/*.test.ts'",
		"test:maths:cov": "deno test --unstable-temporal --no-check 'libraries/maths/tests/**/*.test.ts' --coverage=libraries/maths/coverage && deno coverage libraries/maths/coverage --lcov > libraries/maths/coverage.lcov",
		"test:toolkit": "deno test --unstable-temporal --no-check 'libraries/toolkit/tests/**/*.test.ts'",
		"test:docs:strict": "deno task --cwd applications/docs test:build",
		"test:engine:cov": "deno test --unstable-temporal --no-check 'libraries/engine/tests/**/*.test.ts' --coverage=libraries/engine/coverage && deno coverage libraries/engine/coverage --lcov > libraries/engine/coverage.lcov",
		"test:components:cov": "deno test --unstable-temporal --no-check 'libraries/components/tests/**/*.test.ts' --coverage=libraries/components/coverage && deno coverage libraries/components/coverage --lcov > libraries/components/coverage.lcov",
		"test:toolkit:cov": "deno test --unstable-temporal --no-check 'libraries/toolkit/tests/**/*.test.ts' --coverage=libraries/toolkit/coverage && deno coverage libraries/toolkit/coverage --lcov > libraries/toolkit/coverage.lcov",
		"test:toolkit:strict": "deno test --unstable-temporal 'libraries/toolkit/tests/**/*.test.ts'",
		"test:prover": "deno test --unstable-temporal --allow-all 'libraries/prover/tests/**/*.test.ts'",
		"test:prover:strict": "deno test --unstable-temporal --allow-all 'libraries/prover/tests/**/*.test.ts'",
		"test:prover:cov": "deno test --unstable-temporal --allow-all 'libraries/prover/tests/**/*.test.ts' --coverage=libraries/prover/coverage && deno coverage libraries/prover/coverage --lcov > libraries/prover/coverage.lcov",
		"test:playground:strict": "deno test --unstable-temporal --allow-env --allow-read --config applications/playground/deno.json 'applications/playground/**/*.test.ts'",
		"test:scripts": "deno test --unstable-temporal --allow-read --allow-write --allow-run 'scripts/tests/**/*.test.ts'",
		"test:scripts:strict": "deno test --unstable-temporal --allow-read --allow-write --allow-run 'scripts/tests/**/*.test.ts'",
		"test:scripts:cov": "deno test --unstable-temporal --allow-read --allow-write --allow-run 'scripts/tests/**/*.test.ts' --coverage=scripts/coverage && deno coverage scripts/coverage --lcov > scripts/coverage.lcov",

		// === Prover (Test Generator) ===
		"prover:generate": "deno run --allow-all libraries/prover/src/cli.ts",
		"prover:toolkit": "deno run --allow-all libraries/prover/src/orchestrateTestGeneration/index.ts",
		"prover:self": "deno run --allow-all libraries/prover/src/self-prove.ts",

		// === Unified Coverage (delegates to per-package tasks) ===
		"coverage:docs": "deno task --cwd applications/docs test:cov",
		"coverage:engine": "deno task --cwd libraries/engine test:cov",
		"coverage:components": "deno task --cwd libraries/components test:cov",
		"coverage:toolkit": "deno task --cwd libraries/toolkit test:cov",
		"coverage": "deno task coverage:docs && deno task coverage:engine && deno task coverage:components && deno task coverage:toolkit",
		"coverage:report:ignored": "deno run -A scripts/reportIgnored/index.ts",

		// === Type Checking ===
		"type-check": "deno check --unstable-temporal 'applications/docs/src/**/*.ts' 'applications/docs/src/**/*.tsx' 'scripts/**/*.ts' 'libraries/engine/src/**/*.ts' 'libraries/engine/src/**/*.tsx' 'libraries/components/src/**/*.ts' 'libraries/components/src/**/*.tsx'",
		"type-check:agent": "deno check --config plugins/vscode/deno.jsonc 'plugins/vscode/scripts/**/*.ts'",
		"type-check:focused": "deno check --unstable-temporal libraries/engine/src/operations/comparators/compare/index.ts libraries/engine/src/operations/comparators/amount/isLessThan/index.ts libraries/engine/src/operations/comparators/amount/isMoreThan/index.ts libraries/engine/src/operations/comparators/amount/isNoLessThan/index.ts libraries/engine/src/operations/comparators/equality/isEqualTo/index.ts libraries/engine/src/operations/comparators/equality/isUnequalTo/index.ts libraries/engine/src/operations/comparators/length/isLength/index.ts libraries/engine/src/operations/comparators/length/isLongerThan/index.ts libraries/engine/src/operations/comparators/length/isShorterThan/index.ts libraries/engine/src/operations/comparators/length/isNoLongerThan/index.ts libraries/engine/src/operations/comparators/length/isNoShorterThan/index.ts libraries/engine/src/operations/comparators/length/isNotLength/index.ts libraries/engine/src/operations/comparators/length/isSameLength/index.ts",
		"type-check:playground": "deno check --unstable-temporal --config applications/playground/deno.json 'applications/playground/src/**/*.ts'",

		// === Import Management ===
		"sort": "deno run --allow-read --allow-write --allow-env scripts/sortImports/index.ts --dir=plugins --dir=applications/docs --dir=applications/playground --dir=libraries --dir=scripts",
		"sort:all": "deno run --allow-read --allow-write --allow-env scripts/sortImports/index.ts",
		"lint:aliases": "deno run --allow-read scripts/enforceImports/aliasGuards/index.ts",
		"codemod:aliases": "deno run --allow-read --allow-write scripts/codemods/replace-aliases.ts",
		"migrate:agent": "deno run --allow-read --allow-write scripts/migrate/move-agent-to-vscode.ts",
		"smoke:cli": "deno test --unstable-temporal --allow-read --allow-write --allow-run 'scripts/tests/cli/**/*.test.ts'",

		// === Setup and Maintenance ===
		"setup": "deno run --unstable-temporal -A scripts/setup/index.ts",
		"clean": "deno run --unstable-temporal --allow-write scripts/clean/index.ts",
		"clean:all": "deno task clean && deno task --cwd applications/docs clean",

		// === Development Shortcuts ===
		"dev": "deno task --cwd applications/docs dev",
		"build": "deno task --cwd applications/docs build",
		"build:full": "deno task --cwd applications/docs build:full",

		// === Playground shortcuts (workspace-level) ===
		"playground:dev": "deno task --cwd applications/playground dev",
		"playground:build": "deno task --cwd applications/playground build",
		"playground:build:dev": "deno task --cwd applications/playground build:dev",
		"playground:serve": "deno task --cwd applications/playground serve",
		"playground:type-check": "deno task --cwd applications/playground type-check",

		// === Hooks ===
		"hooks:install": "deno run --allow-read --allow-run --allow-write scripts/hooks/install/index.ts",
		"lint:no-react-junk": "deno run --allow-read --allow-run scripts/enforceNoReactJunk/index.ts",

		// === Local Infra (Docker Compose) ===
		"infra:up": "docker compose up -d",
		"infra:down": "docker compose down -v",
		"infra:restart": "deno task infra:down && deno task infra:up",
		"infra:logs": "docker compose logs -f",
		"infra:ps": "docker compose ps",
		"infra:config": "docker compose config",
		"infra:grafana:reset": "rm -rf ./infra/local/configs/grafana/provisioning/dashboards/* && deno task infra:restart",
		"infra:reload:prom": "curl -sf -X POST http://localhost:9090/-/reload || true"
	},

	// Shared compiler options for all workspace members
	"compilerOptions": {
		"jsx": "react",
		"jsxFactory": "createElement",
		"jsxFragmentFactory": "Fragment",
		"types": [
			"./applications/docs/.sitebender/scripts/types/globals.d.ts",
			"./scripts/types/globals.d.ts",
			// Ensure components' JSX globals are visible during workspace checks
			"./libraries/components/types/globals.d.ts",
			"./libraries/components/types/JSX/jsx-runtime.d.ts",
			"./libraries/engine/src/rendering/types/globals.d.ts",
			"./libraries/toolkit/src/types/shims/temporal-compat.d.ts"
		],
		"strict": true,
		"checkJs": false,
		"lib": [
			"dom",
			"dom.asynciterable",
			"dom.iterable",
			"esnext",
			"deno.ns",
			"deno.window",
			"deno.unstable"
		]
	},

	"imports": {
		// Shared aliases for scripts that reference docs' app modules
		"~utilities/": "./applications/docs/src/utilities/",
		"~components/": "./applications/docs/src/components/",
		"~constants/": "./applications/docs/src/constants/",
		"~routes/": "./applications/docs/pages/",
		"~src/": "./applications/docs/src/",
		"~static/": "./applications/docs/assets/",
		"~tests/": "./applications/docs/tests/",
		"~types/": "./applications/docs/src/types/",
		"~scripts/": "./scripts/",
		// Std lib and testing libs for workspace type-checks
		"@std/expect": "jsr:@std/expect@^1.0.17",
		"@std/testing": "jsr:@std/testing@^1.0.15",
		"@std/testing/bdd": "jsr:@std/testing@^1.0.15/bdd",
		"fast-check": "https://esm.sh/fast-check@4.1.1",
		// Repo-local import guardrails to avoid deep brittle paths during refactors
		"@sitebender/engine": "./libraries/engine/src/",
		"@sitebender/engine/": "./libraries/engine/src/",
		"@sitebender/components": "./libraries/components/src/",
		"@sitebender/components/": "./libraries/components/src/",
		"@sitebender/toolkit": "./libraries/toolkit/src/",
		"@sitebender/toolkit/": "./libraries/toolkit/src/",
		"@sitebender/maths": "./libraries/maths/src/",
		"@sitebender/maths/": "./libraries/maths/src/",
		"@sitebender/prover": "./libraries/prover/src/",
		"@sitebender/prover/": "./libraries/prover/src/",
		"@sitebender/engine-types": "./libraries/engine/types/",
		"@sitebender/engine-types/": "./libraries/engine/types/"
		// Deprecated legacy aliases have been removed after migration
	},

	// Shared formatting configuration
	"fmt": {
		"useTabs": true,
		"lineWidth": 80,
		"indentWidth": 2,
		"newLineKind": "lf",
		"semiColons": false,
		"singleQuote": false,
		"proseWrap": "preserve",
		"include": [
			"plugins/vscode/",
			"applications/docs/",
			"applications/playground/",
			"libraries/",
			"scripts/"
		],
		"exclude": [
			"**/dist/",
			"**/temp/",
			"**/static/",
			"**/node_modules/",
			"**/coverage/"
		]
	},

	// Shared linting configuration
	"lint": {
		"include": [
			"applications/docs/src/",
			"applications/playground/src/",
			"libraries/*/src/",
			"scripts/"
		],
		"exclude": [
			"**/dist/",
			"**/temp/",
			"**/static/",
			"**/node_modules/",
			"**/coverage/"
		],
		"rules": {
			"tags": ["recommended"],
			"include": [
				"ban-untagged-todo",
				"camelcase",
				"eqeqeq",
				"no-await-in-loop",
				"no-const-assign",
				"no-sparse-arrays",
				"no-throw-literal",
				"prefer-const"
			],
			"exclude": []
		}
	},

	// Node modules support for npm packages
	"nodeModulesDir": "auto",

	// No lock file for now (can be enabled later for reproducible builds)
	"lock": false,

	// Test configuration (workspace-wide defaults)
	"test": {
		"include": [
			"*/tests/",
			"libraries/*/tests/",
			"applications/docs/tests/",
			"applications/playground/tests/",
			"tools/*/tests/"
		],
		"exclude": [
			"**/node_modules/",
			"**/dist/",
			"**/coverage/",
			"**/fixtures/"
		]
	},

	// Guardrails: contributors note
	"sitebender_guardrails": {
		"policy": {
			"noNetNewErrorsPerStep": true,
			"smallBatches": true,
			"verifyAfterEvery3Edits": true,
			"preferAliases": [
				"@sitebender/engine",
				"@sitebender/components",
				"@sitebender/toolkit",
				"@sitebender/maths"
			]
		},
		"notes": "Use aliases above during cleanup; replace deep relative imports. Keep changes surgical and re-check often."
	},

	"unstable": ["temporal"]
}
