{
	"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json",
	"name": "@sitebender/studio",
	"version": "0.0.1-alpha",
	"exports": "./mod.ts",
	// Workspace configuration for the Sitebender monorepo
	"workspace": [
		"./libraries/agent",
		"./libraries/arborist",
		"./libraries/architect",
		"./libraries/artificer",
		"./libraries/auditor",
		"./libraries/custodian",
		"./libraries/envoy",
		"./libraries/exchequer",
		"./libraries/formulator",
		"./libraries/linguist",
		"./libraries/operator",
		"./libraries/pathfinder",
		"./libraries/quarrier",
		"./libraries/quartermaster",
		"./libraries/sentinel",
		"./libraries/steward",
		"./libraries/toolsmith",
		"./libraries/warden",
		"./plugins/vscode",
		"./tools/scaffold",
		"./tools/cli",
		"./tools/web3-tools"
	],

	"tasks": {
		// === Environment Configuration ===
		"config:dev": "DENO_ENV=dev deno run --allow-read --allow-write --allow-env scripts/configureEnvironment/index.ts",
		"config:prod": "DENO_ENV=prod deno run --allow-read --allow-write --allow-env scripts/configureEnvironment/index.ts",
		"dev:run": "deno run --allow-all scripts/dev.ts",
		"prod:run": "deno run --allow-all scripts/prod.ts",

		"contracts:check": "DENO_NO_PROMPT=1 deno test contracts/enforcement --allow-read && DENO_NO_PROMPT=1 deno run --allow-read --allow-run scripts/validateContracts/index.ts",
		"analyze": "deno task analyze:files",
		"analyze:files": "deno run --allow-read scripts/analyzeFiles/index.ts",
		"update-toolsmith-inventory": "deno run --allow-read --allow-write scripts/generateToolsmithInventory/index.ts",

		// === Formatting and Code Quality ===
		"fmt": "deno task fmt:repo",
		"fmt:all": "deno task fmt:all:repo",
		"fmt:repo": "deno task sort && deno fmt",
		"fmt:all:repo": "deno task sort:all && deno fmt",
		"fmt:check": "deno fmt --check plugins/ libraries/ scripts/",
		"lint": "deno lint plugins/ libraries/ scripts/",
		"lint:all": "deno lint plugins/ libraries/ scripts/",
		"fp:check": "deno run --allow-read --allow-run scripts/enforceFP/index.ts",
		"fp:docs": "deno run --allow-read --allow-run scripts/enforceFP/index.ts",

		"fp:agent": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/agent/src/**/*.ts' 'libraries/agent/src/**/*.tsx'",
		"fp:arborist": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/arborist/src/**/*.ts' 'libraries/arborist/src/**/*.tsx'",
		"fp:architect": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/architect/src/**/*.ts' 'libraries/architect/src/**/*.tsx'",
		"fp:artificer": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/artificer/src/**/*.ts' 'libraries/artificer/src/**/*.tsx'",
		"fp:auditor": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/auditor/src/**/*.ts' 'libraries/auditor/src/**/*.tsx'",
		"fp:custodian": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/custodian/src/**/*.ts' 'libraries/custodian/src/**/*.tsx'",
		"fp:envoy": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/envoy/src/**/*.ts' 'libraries/envoy/src/**/*.tsx'",
		"fp:exchequer": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/exchequer/src/**/*.ts' 'libraries/exchequer/src/**/*.tsx'",
		"fp:formulator": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/formulator/src/**/*.ts' 'libraries/formulator/src/**/*.tsx'",
		"fp:linguist": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/linguist/src/**/*.ts' 'libraries/linguist/src/**/*.tsx'",
		"fp:operator": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/operator/src/**/*.ts' 'libraries/operator/src/**/*.tsx'",
		"fp:pathfinder": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/pathfinder/src/**/*.ts' 'libraries/pathfinder/src/**/*.tsx'",
		"fp:quarrier": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/quarrier/src/**/*.ts' 'libraries/quarrier/src/**/*.tsx'",
		"fp:quartermaster": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/quartermaster/src/**/*.ts' 'libraries/quartermaster/src/**/*.tsx'",
		"fp:sentinel": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/sentinel/src/**/*.ts' 'libraries/sentinel/src/**/*.tsx'",
		"fp:steward": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/steward/src/**/*.ts' 'libraries/architect/src/**/*.tsx'",
		"fp:toolsmith": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/toolsmith/src/**/*.ts' 'libraries/toolsmith/src/**/*.tsx'",
		"fp:warden": "deno run --allow-read --allow-run scripts/enforceFP/index.ts 'libraries/warden/src/**/*.ts' 'libraries/warden/src/**/*.tsx'",

		"fp:pedantic": "deno run --allow-read --allow-run scripts/enforceFP/index.ts --pedantic 'libraries/*/src/**/*.ts' 'libraries/*/src/**/*.tsx'",

		// === Testing ===
		"test": "deno task test:artificer && deno task test:artificer && deno task test:formulator && deno task test:toolsmith && deno task test:auditor",
		"test:agent": "deno test --unstable-temporal --no-check 'libraries/agent/**/*.test.ts'",
		"test:agent:strict": "deno test --unstable-temporal 'libraries/agent/**/*.test.ts'",
		"test:arborist": "deno test --unstable-temporal --no-check 'libraries/arborist/**/*.test.ts'",
		"test:arborist:strict": "deno test --unstable-temporal 'libraries/arborist/**/*.test.ts'",
		"test:architect": "deno test --unstable-temporal --no-check 'libraries/architect/**/*.test.ts'",
		"test:architect:strict": "deno test --unstable-temporal 'libraries/architect/**/*.test.ts'",
		"test:artificer": "deno test --unstable-temporal --no-check 'libraries/artificer/**/*.test.ts'",
		"test:artificer:strict": "deno test --unstable-temporal 'libraries/artificer/**/*.test.ts'",
		"test:auditor": "deno test --unstable-temporal --allow-all 'libraries/auditor/**/*.test.ts'",
		"test:auditor:strict": "deno test --unstable-temporal --allow-all 'libraries/auditor/**/*.test.ts'",
		"test:custodian": "deno test --unstable-temporal --allow-all 'libraries/custodian/**/*.test.ts'",
		"test:custodian:strict": "deno test --unstable-temporal --allow-all 'libraries/custodian/**/*.test.ts'",
		"test:envoy": "deno test --unstable-temporal --allow-all 'libraries/envoy/**/*.test.ts'",
		"test:envoy:strict": "deno test --unstable-temporal --allow-all 'libraries/envoy/**/*.test.ts'",
		"test:exchequer": "deno test --unstable-temporal --allow-all 'libraries/exchequer/**/*.test.ts'",
		"test:exchequer:strict": "deno test --unstable-temporal --allow-all 'libraries/exchequer/**/*.test.ts'",
		"test:formulator": "deno test --unstable-temporal --no-check 'libraries/formulator/**/*.test.ts'",
		"test:formulator:strict": "deno test --unstable-temporal 'libraries/formulator/**/*.test.ts'",
		"test:linguist": "deno test --unstable-temporal --no-check 'libraries/linguist/**/*.test.ts'",
		"test:linguist:strict": "deno test --unstable-temporal 'libraries/linguist/**/*.test.ts'",
		"test:operator": "deno test --unstable-temporal --no-check 'libraries/operator/**/*.test.ts'",
		"test:operator:strict": "deno test --unstable-temporal 'libraries/operator/**/*.test.ts'",
		"test:pathfinder": "deno test --unstable-temporal --no-check 'libraries/pathfinder/**/*.test.ts'",
		"test:pathfinder:strict": "deno test --unstable-temporal 'libraries/pathfinder/**/*.test.ts'",
		"test:quarrier": "deno test --unstable-temporal --no-check 'libraries/quarrier/**/*.test.ts'",
		"test:quarrier:strict": "deno test --unstable-temporal 'libraries/quarrier/**/*.test.ts'",
		"test:quartermaster": "deno test --unstable-temporal --no-check 'libraries/quartermaster/**/*.test.ts'",
		"test:quartermaster:strict": "deno test --unstable-temporal 'libraries/quartermaster/**/*.test.ts'",
		"test:sentinel": "deno test --unstable-temporal --no-check 'libraries/sentinel/**/*.test.ts'",
		"test:sentinel:strict": "deno test --unstable-temporal 'libraries/sentinel/**/*.test.ts'",
		"test:steward": "deno test --unstable-temporal --no-check 'libraries/steward/**/*.test.ts'",
		"test:steward:strict": "deno test --unstable-temporal 'libraries/steward/**/*.test.ts'",
		"test:toolsmith": "deno test --unstable-temporal --no-check 'libraries/toolsmith/**/*.test.ts'",
		"test:toolsmith:strict": "deno test --unstable-temporal 'libraries/toolsmith/**/*.test.ts'",
		"test:warden": "deno test --unstable-temporal --no-check 'libraries/warden/**/*.test.ts'",
		"test:warden:strict": "deno test --unstable-temporal 'libraries/warden/**/*.test.ts'",

		"test:agent:cov": "deno test --unstable-temporal --allow-all 'libraries/agent/**/*.test.ts' --coverage=libraries/agent/coverage && deno coverage libraries/agent/coverage --lcov > libraries/agent/coverage.lcov",
		"test:arborist:cov": "deno test --unstable-temporal --allow-all 'libraries/arborist/**/*.test.ts' --coverage=libraries/arborist/coverage && deno coverage libraries/arborist/coverage --lcov > libraries/arborist/coverage.lcov",
		"test:architect:cov": "deno test --unstable-temporal --no-check 'libraries/architect/**/*.test.ts' --coverage=libraries/architect/coverage && deno coverage libraries/architect/coverage --lcov > libraries/architect/coverage.lcov",
		"test:artificer:cov": "deno test --unstable-temporal --no-check 'libraries/artificer/**/*.test.ts' --coverage=libraries/artificer/coverage && deno coverage libraries/artificer/coverage --lcov > libraries/artificer/coverage.lcov",
		"test:auditor:cov": "deno test --unstable-temporal --allow-all 'libraries/auditor/**/*.test.ts' --coverage=libraries/auditor/coverage && deno coverage libraries/auditor/coverage --lcov > libraries/auditor/coverage.lcov",
		"test:custodian:cov": "deno test --unstable-temporal --allow-all 'libraries/custodian/**/*.test.ts' --coverage=libraries/custodian/coverage && deno coverage libraries/custodian/coverage --lcov > libraries/custodian/coverage.lcov",
		"test:envoy:cov": "deno test --unstable-temporal --allow-all 'libraries/envoy/**/*.test.ts' --coverage=libraries/envoy/coverage && deno coverage libraries/envoy/coverage --lcov > libraries/envoy/coverage.lcov",
		"test:exchequer:cov": "deno test --unstable-temporal --allow-all 'libraries/exchequer/**/*.test.ts' --coverage=libraries/exchequer/coverage && deno coverage libraries/exchequer/coverage --lcov > libraries/exchequer/coverage.lcov",
		"test:formulator:cov": "deno test --unstable-temporal --allow-all 'libraries/formulator/**/*.test.ts' --coverage=libraries/formulator/coverage && deno coverage libraries/formulator/coverage --lcov > libraries/formulator/coverage.lcov",
		"test:linguist:cov": "deno test --unstable-temporal --allow-all 'libraries/linguist/**/*.test.ts' --coverage=libraries/linguist/coverage && deno coverage libraries/linguist/coverage --lcov > libraries/linguist/coverage.lcov",
		"test:operator:cov": "deno test --unstable-temporal --allow-all 'libraries/operator/**/*.test.ts' --coverage=libraries/operator/coverage && deno coverage libraries/operator/coverage --lcov > libraries/operator/coverage.lcov",
		"test:pathfinder:cov": "deno test --unstable-temporal --allow-all 'libraries/pathfinder/**/*.test.ts' --coverage=libraries/pathfinder/coverage && deno coverage libraries/pathfinder/coverage --lcov > libraries/pathfinder/coverage.lcov",
		"test:quarrier:cov": "deno test --unstable-temporal --allow-all 'libraries/quarrier/**/*.test.ts' --coverage=libraries/quarrier/coverage && deno coverage libraries/quarrier/coverage --lcov > libraries/quarrier/coverage.lcov",
		"test:quartermaster:cov": "deno test --unstable-temporal --allow-all 'libraries/quartermaster/**/*.test.ts' --coverage=libraries/quartermaster/coverage && deno coverage libraries/quartermaster/coverage --lcov > libraries/quartermaster/coverage.lcov",
		"test:sentinel:cov": "deno test --unstable-temporal --allow-all 'libraries/sentinel/**/*.test.ts' --coverage=libraries/sentinel/coverage && deno coverage libraries/sentinel/coverage --lcov > libraries/sentinel/coverage.lcov",
		"test:steward:cov": "deno test --unstable-temporal --allow-all 'libraries/steward/**/*.test.ts' --coverage=libraries/steward/coverage && deno coverage libraries/steward/coverage --lcov > libraries/steward/coverage.lcov",
		"test:toolsmith:cov": "deno test --unstable-temporal --no-check 'libraries/toolsmith/**/*.test.ts' --coverage=libraries/toolsmith/coverage && deno coverage libraries/toolsmith/coverage --lcov > libraries/toolsmith/coverage.lcov",
		"test:warden:cov": "deno test --unstable-temporal --allow-all 'libraries/warden/**/*.test.ts' --coverage=libraries/warden/coverage && deno coverage libraries/warden/coverage --lcov > libraries/warden/coverage.lcov",

		"test:scripts": "deno test --unstable-temporal --allow-read --allow-write --allow-run 'scripts/**/*.test.ts'",
		"test:scripts:strict": "deno test --unstable-temporal --allow-read --allow-write --allow-run 'scripts/**/*.test.ts'",
		"test:scripts:cov": "deno test --unstable-temporal --allow-read --allow-write --allow-run 'scripts/**/*.test.ts' --coverage=scripts/coverage && deno coverage scripts/coverage --lcov > scripts/coverage.lcov",

		// === Auditor (Test Generator) ===
		"auditor:generate": "deno run --allow-all libraries/auditor/src/cli.ts",
		"auditor:toolsmith": "deno run --allow-all libraries/auditor/src/orchestrateTestGeneration/index.ts",
		"auditor:self": "deno run --allow-all libraries/auditor/src/self-prove.ts",

		// === Unified Coverage (delegates to per-package tasks) ===
		"coverage:docs": "deno task --cwd applications/mission-control test:cov",
		"coverage:architect": "deno task --cwd libraries/architect test:cov",
		"coverage:artificer": "deno task --cwd libraries/artificer test:cov",
		"coverage:toolsmith": "deno task --cwd libraries/toolsmith test:cov",
		"coverage": "deno task coverage:docs && deno task coverage:artificer && deno task coverage:artificer && deno task coverage:toolsmith",
		"coverage:report:ignored": "deno run -A scripts/reportIgnored/index.ts",

		// === Type Checking ===
		"type-check": "deno check --unstable-temporal 'scripts/**/*.ts' 'libraries/artificer/src/**/*.ts' 'libraries/artificer/src/**/*.tsx' 'libraries/artificer/src/**/*.ts' 'libraries/artificer/src/**/*.tsx'",
		"type-check:agent": "deno check --config plugins/vscode/deno.jsonc 'plugins/vscode/scripts/**/*.ts'",
		"type-check:focused": "deno check --unstable-temporal libraries/artificer/src/operations/comparators/compare/index.ts libraries/artificer/src/operations/comparators/amount/isLessThan/index.ts libraries/artificer/src/operations/comparators/amount/isMoreThan/index.ts libraries/artificer/src/operations/comparators/amount/isNoLessThan/index.ts libraries/artificer/src/operations/comparators/equality/isEqualTo/index.ts libraries/artificer/src/operations/comparators/equality/isUnequalTo/index.ts libraries/artificer/src/operations/comparators/length/isLength/index.ts libraries/artificer/src/operations/comparators/length/isLongerThan/index.ts libraries/artificer/src/operations/comparators/length/isShorterThan/index.ts libraries/artificer/src/operations/comparators/length/isNoLongerThan/index.ts libraries/artificer/src/operations/comparators/length/isNoShorterThan/index.ts libraries/artificer/src/operations/comparators/length/isNotLength/index.ts libraries/artificer/src/operations/comparators/length/isSameLength/index.ts",

		// === Import Management ===
		"sort": "deno run --allow-read --allow-write --allow-env scripts/sortImports/index.ts --dir=plugins --dir=applications/mission-control --dir=applications/the-workshop --dir=libraries --dir=scripts",
		"sort:all": "deno run --allow-read --allow-write --allow-env scripts/sortImports/index.ts",
		"lint:aliases": "deno run --allow-read scripts/enforceImports/aliasGuards/index.ts",
		"codemod:aliases": "deno run --allow-read --allow-write scripts/codemods/replace-aliases.ts",
		"migrate:agent": "deno run --allow-read --allow-write scripts/migrate/move-agent-to-vscode.ts",
		"smoke:cli": "deno test --unstable-temporal --allow-read --allow-write --allow-run 'scripts/tests/cli/**/*.test.ts'",

		// === Setup and Maintenance ===
		"setup": "deno run --unstable-temporal -A scripts/setup/index.ts",
		"clean": "deno run --unstable-temporal --allow-write scripts/clean/index.ts",

		// === Development Shortcuts ===
		"demo:agent": "deno task --cwd libraries/agent demo",
		"demo:arborist": "deno task --cwd libraries/arborist demo",

		// === Code Generators ===
		"new:function": "deno run --allow-read --allow-write .claude/skills/function-implementation/script.ts",
		"new:component": "deno run --allow-read --allow-write .claude/skills/component/script.ts",
		"new:branded": "deno run --allow-read --allow-write .claude/skills/type-definition/brandedTypeScript.ts",
		"new:union": "deno run --allow-read --allow-write .claude/skills/type-definition/discriminatedUnionScript.ts",

		// === Hooks ===
		"hooks:install": "deno run --allow-read --allow-run --allow-write scripts/hooks/install/index.ts",
		"lint:no-react-junk": "deno run --allow-read --allow-run scripts/enforceNoReactJunk/index.ts",

		// === Worktree Management ===
		"worktrees:setup": "bash scripts/setupWorktrees/index.sh",
		"integrate": "bash scripts/integrateLibraries/index.sh",

		// === Local Infra (Docker Compose) ===
		"infra:up": "docker compose up -d",
		"infra:down": "docker compose down -v",
		"infra:restart": "deno task infra:down && deno task infra:up",
		"infra:logs": "docker compose logs -f",
		"infra:ps": "docker compose ps",
		"infra:config": "docker compose config",
		"infra:grafana:reset": "rm -rf ./infra/local/configs/grafana/provisioning/dashboards/* && deno task infra:restart",
		"infra:reload:prom": "curl -sf -X POST http://localhost:9090/-/reload || true",

		// Cost estimation helpers
		"estimate:gpt": "deno run -A scripts/estimate/gptCost.ts"
	},

	// Shared compiler options for all workspace members
	"compilerOptions": {
		"jsx": "react",
		"jsxFactory": "createElement",
		"jsxFragmentFactory": "Fragment",
		"types": [
			"./scripts/types/globals.d.ts",
			// Ensure artificer' JSX types are visible during workspace checks
			"./libraries/artificer/types/JSX/jsx-runtime.d.ts"
		],
		"strict": true,
		"checkJs": false,
		"lib": [
			"dom",
			"dom.asynciterable",
			"dom.iterable",
			"esnext",
			"deno.ns",
			"deno.window",
			"deno.unstable"
		],
		"skipLibCheck": true
	},

	"imports": {
		// Shared aliases for scripts that reference docs' app modules
		"~scripts/": "./scripts/",
		// Std lib and testing libs for workspace type-checks
		"@std/expect": "jsr:@std/expect@^1.0.17",
		"@std/assert": "jsr:@std/assert@^1.0.14",
		"@std/testing": "jsr:@std/testing@^1.0.15",
		"@std/testing/bdd": "jsr:@std/testing@^1.0.15/bdd",
		"fast-check": "https://esm.sh/fast-check@4.1.1",
		// Repo-local import guardrails to avoid deep brittle paths during refactors
		"@sitebender/agent": "./libraries/agent/src/",
		"@sitebender/agent/": "./libraries/agent/src/",
		"@sitebender/arborist": "./libraries/arborist/src/",
		"@sitebender/arborist/": "./libraries/arborist/src/",
		"@sitebender/architect": "./libraries/architect/src/",
		"@sitebender/architect/": "./libraries/architect/src/",
		"@sitebender/artificer": "./libraries/artificer/src/",
		"@sitebender/artificer/": "./libraries/artificer/src/",
		"@sitebender/auditor": "./libraries/auditor/src/",
		"@sitebender/auditor/": "./libraries/auditor/src/",
		"@sitebender/custodian": "./libraries/custodian/src/",
		"@sitebender/custodian/": "./libraries/custodian/src/",
		"@sitebender/envoy": "./libraries/envoy/src/",
		"@sitebender/envoy/": "./libraries/envoy/src/",
		"@sitebender/exchequer": "./libraries/exchequer/src/",
		"@sitebender/exchequer/": "./libraries/exchequer/src/",
		"@sitebender/formulator": "./libraries/formulator/src/",
		"@sitebender/formulator/": "./libraries/formulator/src/",
		"@sitebender/linguist": "./libraries/linguist/src/",
		"@sitebender/linguist/": "./libraries/linguist/src/",
		"@sitebender/operator": "./libraries/operator/src/",
		"@sitebender/operator/": "./libraries/operator/src/",
		"@sitebender/pathfinder": "./libraries/pathfinder/src/",
		"@sitebender/pathfinder/": "./libraries/pathfinder/src/",
		"@sitebender/quarrier": "./libraries/quarrier/src/",
		"@sitebender/quarrier/": "./libraries/quarrier/src/",
		"@sitebender/quartermaster": "./libraries/quartermaster/src/",
		"@sitebender/quartermaster/": "./libraries/quartermaster/src/",
		"@sitebender/sentinel": "./libraries/sentinel/src/",
		"@sitebender/sentinel/": "./libraries/sentinel/src/",
		"@sitebender/steward": "./libraries/steward/src/",
		"@sitebender/steward/": "./libraries/steward/src/",
		"@sitebender/toolsmith": "./libraries/toolsmith/src/",
		"@sitebender/toolsmith/": "./libraries/toolsmith/src/",
		"@sitebender/warden": "./libraries/warden/src/",
		"@sitebender/warden/": "./libraries/warden/src/"
	},

	// Shared formatting configuration
	"fmt": {
		"useTabs": true,
		"lineWidth": 80,
		"indentWidth": 2,
		"newLineKind": "lf",
		"semiColons": false,
		"singleQuote": false,
		"proseWrap": "preserve",
		"include": [
			"plugins/vscode/",
			"libraries/",
			"scripts/"
		],
		"exclude": [
			"**/dist/",
			"**/temp/",
			"**/static/",
			"**/node_modules/",
			"**/coverage/"
		]
	},

	// Shared linting configuration
	"lint": {
		"include": [
			"libraries/*/src/",
			"scripts/"
		],
		"exclude": [
			"**/dist/",
			"**/temp/",
			"**/static/",
			"**/node_modules/",
			"**/coverage/"
		],
		"rules": {
			"tags": ["recommended"],
			"include": [
				"ban-untagged-todo",
				"camelcase",
				"eqeqeq",
				"no-await-in-loop",
				"no-const-assign",
				"no-sparse-arrays",
				"no-throw-literal",
				"prefer-const"
			],
			"exclude": []
		}
	},

	// Node modules support for npm packages
	"nodeModulesDir": "auto",

	// No lock file for now (can be enabled later for reproducible builds)
	"lock": false,

	// Test configuration (workspace-wide defaults)
	"test": {
		"include": [
			"*/tests/",
			"libraries/*/tests/",
			"tools/*/tests/"
		],
		"exclude": ["**/node_modules/", "**/dist/", "**/coverage/", "**/fixtures/"]
	},

	// Guardrails: contributors note
	"sitebender_guardrails": {
		"policy": {
			"noNetNewErrorsPerStep": true,
			"smallBatches": true,
			"verifyAfterEvery3Edits": true,
			"preferAliases": [
				"@sitebender/agent",
				"@sitebender/arborist",
				"@sitebender/architect",
				"@sitebender/artificer",
				"@sitebender/auditor",
				"@sitebender/custodian",
				"@sitebender/envoy",
				"@sitebender/exchequer",
				"@sitebender/formulator",
				"@sitebender/linguist",
				"@sitebender/operator",
				"@sitebender/pathfinder",
				"@sitebender/quarrier",
				"@sitebender/quartermaster",
				"@sitebender/sentinel",
				"@sitebender/steward",
				"@sitebender/toolsmith",
				"@sitebender/warden"
			]
		},
		"notes": "Use aliases above during cleanup; replace deep relative imports. Keep changes surgical and re-check often."
	},

	"unstable": ["temporal"]
}
