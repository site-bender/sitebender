export type ScaffoldOptions = {
	name: string
	template?: "docs" | "playground"
	targetDir?: string
}

export async function scaffoldApp(opts: ScaffoldOptions): Promise<void> {
	const { name, template = "docs", targetDir = `./${name}` } = opts
	const resolved = new URL(targetDir, new URL(".", import.meta.url)).pathname
	await Deno.mkdir(resolved, { recursive: true })

	// Minimal files; later extend with real templates
	await Deno.writeTextFile(
		`${resolved}/README.md`,
		`# ${name}\n\nGenerated by Sitebender scaffold.`,
	)

	if (template === "docs") {
		await Deno.writeTextFile(
			`${resolved}/deno.jsonc`,
			`{
  "tasks": {"dev": "deno task --cwd ../../applications/docs dev"}
}`,
		)
	} else if (template === "playground") {
		await Deno.writeTextFile(
			`${resolved}/deno.jsonc`,
			`{
  "tasks": {"dev": "deno task --cwd ../../applications/playground dev"}
}`,
		)
	}
}
